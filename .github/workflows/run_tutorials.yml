name: Run Haystack Tutorials

on:
  pull_request:
    paths:
      - "tutorials/*.ipynb"

jobs:
  generate-matrix:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.filter.outputs.matrix }}
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - id: generator
        env:
          GH_TOKEN: ${{ github.token }}
        run: |
          # Get tutorial notebooks
          VERSION=$(gh api /repos/deepset-ai/haystack/releases | \
            jq -r '[.[].tag_name | select(test("^v2.[0-9]+.[0-9]+$"))] | first')
          NOTEBOOKS=$(python ./scripts/generate_matrix.py --haystack-version "$VERSION" --include-main)
          echo "matrix={\"include\":$NOTEBOOKS}" >> "$GITHUB_OUTPUT"

      - name: Get changed files
        id: files
        uses: tj-actions/changed-files@v46
        with:
          matrix: true
          files: tutorials/*.ipynb

      - name: Filter non changed notebooks
        id: filter
        shell: python
        env:
          MATRIX: ${{ steps.generator.outputs.matrix }}
          CHANGED_FILES: ${{ steps.files.outputs.all_changed_files }}
        run: |
          import os
          import json

          matrix = json.loads(os.environ["MATRIX"])
          changed_files = json.loads(os.environ["CHANGED_FILES"])
          new_matrix = {"include": []}
          for item in matrix["include"]:
            notebook = item["notebook"]
            if f"tutorials/{notebook}.ipynb" not in changed_files:
              continue
            new_matrix["include"].append(item)

          new_matrix = json.dumps(new_matrix)
          with open(os.environ["GITHUB_OUTPUT"], "a") as f:
            print(f"matrix={new_matrix}", file=f)

  run-tutorials:
    runs-on: ubuntu-latest
    needs: generate-matrix
    container: deepset/haystack:base-${{ matrix.haystack_version }}

    strategy:
      fail-fast: false
      matrix: ${{ fromJSON(needs.generate-matrix.outputs.matrix) }}

    env:
      HAYSTACK_TELEMETRY_ENABLED: "False"
      HF_API_TOKEN: ${{ secrets.HF_API_KEY }}
      OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
      SERPERDEV_API_KEY: ${{ secrets.SERPERDEV_API_KEY }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install common dependencies
        run: |
          apt-get update && apt-get install -y \
              build-essential \
              gcc \
              libsndfile1 \
              ffmpeg

          pip install nbconvert ipython

      - name: Install tutorial dependencies
        if: toJSON(matrix.dependencies) != '[]'
        run: |
          pip install "${{ join(matrix.dependencies, '" "')}}"

      - name: Convert notebook to Python
        run: |
          jupyter nbconvert --to python --RegexRemovePreprocessor.patterns '%%bash' ./tutorials/${{ matrix.notebook }}.ipynb

      - name: Run the converted notebook
        run: |
          python ./tutorials/${{ matrix.notebook }}.py
